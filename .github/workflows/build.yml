name: Build

on:
  push:
      branches:
          - master
          - main
  pull_request:
      branches:
          - "*"
  release:
    types: [created]

jobs:

  test:

    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Test
        shell: pwsh
        run: dotnet test -c Release


  publish-nuget-pacakge:
    needs: test
    if: (github.event_name == 'push')

    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore
        shell: pwsh
        run: dotnet restore

      - name: Package
        shell: pwsh
        run: dotnet pack .\Tocsoft.GraphQLCodeGen.MsBuild\Tocsoft.GraphQLCodeGen.MsBuild.csproj -c Release -o packages

      - uses: actions/upload-artifact@v2
        with:
          name: nuget
          path: packages/*.nupkg

      - name: Publish the package to GPR
        shell: pwsh
        run: dotnet nuget push "$((Resolve-Path packages/*.nupkg).Path)" -s https://nuget.pkg.github.com/tocsoft/index.json -k ${{secrets.GITHUB_TOKEN}}  --skip-duplicate 
        
      - name: Publish the package to nuget.org
        if: github.event_name == 'release' && github.event.action == 'created'
        shell: pwsh
        run: dotnet nuget push "$((Resolve-Path packages/*.nupkg).Path)" -k ${{secrets.NUGET_TOKEN}}  --skip-duplicate 

  publish-npm-package:
    needs: test
    if: (github.event_name == 'push')

    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore
        shell: pwsh
        run: dotnet restore

      - name: Package
        shell: pwsh
        run: dotnet pack .\Tocsoft.GraphQLCodeGen.Npm\Tocsoft.GraphQLCodeGen.Npm.csproj -c Release -o packages

      - uses: actions/upload-artifact@v2
        with:
          name: npm
          path: packages/*.tgz

      - name: Configure authenticate bintray
        shell: pwsh
        run:  Set-Content -Path '.npmrc' -Value "${{ secrets.BINTRAY_NPMRC }}"

      - name: Publish npm package to bintray
        shell: pwsh
        run: npm publish "$((Resolve-Path packages/*.tgz).Path)" --registry https://api.bintray.com/npm/tocsoft/npm

      - name: Configure npmjs package registry
        if: github.event_name == 'release' && github.event.action == 'created'
        shell: pwsh
        run:  Set-Content -Path '.npmrc' -Value 'registry=https://registry.npmjs.org'

      - name: Publish npm package to Npmjs package registry
        shell: pwsh
        run: npm publish "$((Resolve-Path packages/*.tgz).Path)" --access public
        if: github.event_name == 'release' && github.event.action == 'created'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}